#!/bin/bash
# timec - a count up timer
#
# Author       : Rahul Martim Juliato (rahul.juliato@gmail.com)
#
# Version 1    : Inicial (24.03.2017)
# Version 2    : Help, version, label, and stopwatch options added (07.08.2017)
# Version 3    : Added stopwatch feature (19.04.2024)

MESSAGE="
Usage: $(basename "$0") [option]
(starts a time up counter on terminal)

[option] list:
--label \"Text\"       Labels the timer with \"Text\"        
-s <minutes>        Run stopwatch for specified minutes and notify
--help            Shows this message
--version        Shows current version
"

# Function to check if notify-send is available
function notify_available() {
    command -v notify-send > /dev/null 2>&1
}

# Function to handle errors
function show_error() {
    echo "Error: $1" >&2
    exit 1
}

LABEL="" # Initialize LABEL variable

while [[ "$#" -gt 0 ]]; do
    case "$1" in
        --label)
            [[ $2 ]] && {
                LABEL="$2 - "
                shift 2
            } || {
                show_error "No label defined. Use: $(basename "$0") --label \"Your Label\""
            }
            ;;
        --stopwatch|-s)
            [[ $2 ]] && {
                MINUTES="$2"
                NOTIFY_TIME=$((MINUTES*60))
                shift 2
            } || {
                show_error "Missing argument. Use: $(basename "$0") --stopwatch|-s <minutes> [--label \"Your Label\"]"
            }
            ;;
        --help)
            echo "$MESSAGE"
            exit 0
            ;;
        --version)
            echo 
            sed -n "2p" "$0" | tr -d "#"
            grep -e "^# Ver" "$0" | tail -n 1 | cut -d ":" -f 1 | tr -d "#"
            grep -e "^# Aut" "$0" | cut -d ":" -f 2 | tr -d "#"
            echo
            exit 0
            ;;
        *)
            show_error "Invalid option. Use --help to see available options."
            ;;
    esac
done

if [[ -n $NOTIFY_TIME ]]; then
    if [[ -n $LABEL ]]; then
        echo "Stopwatch started for $MINUTES minutes with label: $LABEL ..."
    else
        echo "Stopwatch started for $MINUTES minutes..."
    fi
    inicio=$(date +%s)
    while true; do
        elapsed=$(( $(date +%s) - inicio ))
        remaining=$(( NOTIFY_TIME - elapsed ))
        if [[ remaining -le 0 ]]; then
            if notify_available; then
                notify-send "Stopwatch Completed!" "The stopwatch has completed for $MINUTES minutes."
            fi
            echo -e "\aStopwatch completed!"
            exit 0
        else
            if [[ -n $LABEL ]]; then
                echo -ne "Remaining time for $LABEL$(date -u --date @$remaining +%H:%M:%S)               \r"
            else
                echo -ne "Remaining time: $(date -u --date @$remaining +%H:%M:%S)               \r"
            fi
            sleep 1
        fi
    done
fi

inicio=$(date +%s)

while true; do
    echo -ne "$LABEL$(date -u --date @$(( $(date +%s) - inicio )) +%H:%M:%S)                                \r"
    sleep 1
done
